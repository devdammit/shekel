package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.43

import (
	"context"

	"github.com/devdammit/shekel/cmd/unit/internal/entities"
	"github.com/devdammit/shekel/pkg/gql"
	"github.com/devdammit/shekel/pkg/pointer"
)

// SequenceOfYear is the resolver for the sequenceOfYear field.
func (r *periodResolver) SequenceOfYear(ctx context.Context, obj *entities.Period) (uint32, error) {
	return uint32(obj.SequenceOfYear), nil
}

// CreatedAt is the resolver for the createdAt field.
func (r *periodResolver) CreatedAt(ctx context.Context, obj *entities.Period) (gql.DateTime, error) {
	return gql.FromDateTime(obj.CreatedAt), nil
}

// ClosedAt is the resolver for the closedAt field.
func (r *periodResolver) ClosedAt(ctx context.Context, obj *entities.Period) (*gql.DateTime, error) {
	if obj.ClosedAt == nil {
		return nil, nil
	}

	return pointer.Ptr(gql.FromDateTime(*obj.ClosedAt)), nil
}

// Period returns PeriodResolver implementation.
func (r *Resolver) Period() PeriodResolver { return &periodResolver{r} }

type periodResolver struct{ *Resolver }
