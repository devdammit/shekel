package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.43

import (
	"context"

	"github.com/devdammit/shekel/cmd/unit/internal/entities"
	"github.com/devdammit/shekel/cmd/unit/internal/handlers/graphql/model"
	"github.com/devdammit/shekel/pkg/gql"
)

// Amount is the resolver for the amount field.
func (r *transactionResolver) Amount(ctx context.Context, obj *entities.Transaction) (model.Amount, error) {
	return model.Amount{
		Amount: obj.Amount.Value,
		Currency: gql.Currency{
			Code: obj.Amount.CurrencyCode,
		},
	}, nil
}

// CreatedAt is the resolver for the createdAt field.
func (r *transactionResolver) CreatedAt(ctx context.Context, obj *entities.Transaction) (gql.DateTime, error) {
	return gql.FromDateTime(obj.CreatedAt), nil
}

// Transaction returns TransactionResolver implementation.
func (r *Resolver) Transaction() TransactionResolver { return &transactionResolver{r} }

type transactionResolver struct{ *Resolver }
